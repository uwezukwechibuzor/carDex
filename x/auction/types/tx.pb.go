// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cardex/auction/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgInitiateAuction struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AuctionID       string `protobuf:"bytes,2,opt,name=auctionID,proto3" json:"auctionID,omitempty"`
	MinimumBid      string `protobuf:"bytes,3,opt,name=minimumBid,proto3" json:"minimumBid,omitempty"`
	Bid             string `protobuf:"bytes,4,opt,name=bid,proto3" json:"bid,omitempty"`
	AuctionDuration string `protobuf:"bytes,5,opt,name=auctionDuration,proto3" json:"auctionDuration,omitempty"`
	CarDescription  string `protobuf:"bytes,6,opt,name=carDescription,proto3" json:"carDescription,omitempty"`
	CarPictureUrl   string `protobuf:"bytes,7,opt,name=carPictureUrl,proto3" json:"carPictureUrl,omitempty"`
	Status          string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt       int64  `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (m *MsgInitiateAuction) Reset()         { *m = MsgInitiateAuction{} }
func (m *MsgInitiateAuction) String() string { return proto.CompactTextString(m) }
func (*MsgInitiateAuction) ProtoMessage()    {}
func (*MsgInitiateAuction) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb5a3920549f3869, []int{0}
}
func (m *MsgInitiateAuction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitiateAuction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitiateAuction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitiateAuction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitiateAuction.Merge(m, src)
}
func (m *MsgInitiateAuction) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitiateAuction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitiateAuction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitiateAuction proto.InternalMessageInfo

func (m *MsgInitiateAuction) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgInitiateAuction) GetAuctionID() string {
	if m != nil {
		return m.AuctionID
	}
	return ""
}

func (m *MsgInitiateAuction) GetMinimumBid() string {
	if m != nil {
		return m.MinimumBid
	}
	return ""
}

func (m *MsgInitiateAuction) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *MsgInitiateAuction) GetAuctionDuration() string {
	if m != nil {
		return m.AuctionDuration
	}
	return ""
}

func (m *MsgInitiateAuction) GetCarDescription() string {
	if m != nil {
		return m.CarDescription
	}
	return ""
}

func (m *MsgInitiateAuction) GetCarPictureUrl() string {
	if m != nil {
		return m.CarPictureUrl
	}
	return ""
}

func (m *MsgInitiateAuction) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgInitiateAuction) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type MsgInitiateAuctionResponse struct {
}

func (m *MsgInitiateAuctionResponse) Reset()         { *m = MsgInitiateAuctionResponse{} }
func (m *MsgInitiateAuctionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInitiateAuctionResponse) ProtoMessage()    {}
func (*MsgInitiateAuctionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb5a3920549f3869, []int{1}
}
func (m *MsgInitiateAuctionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitiateAuctionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitiateAuctionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitiateAuctionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitiateAuctionResponse.Merge(m, src)
}
func (m *MsgInitiateAuctionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitiateAuctionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitiateAuctionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitiateAuctionResponse proto.InternalMessageInfo

type MsgSubmitBid struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	BidID     string `protobuf:"bytes,2,opt,name=bidID,proto3" json:"bidID,omitempty"`
	AuctionID string `protobuf:"bytes,3,opt,name=auctionID,proto3" json:"auctionID,omitempty"`
	BidHash   string `protobuf:"bytes,4,opt,name=bidHash,proto3" json:"bidHash,omitempty"`
	CreatedAt int64  `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (m *MsgSubmitBid) Reset()         { *m = MsgSubmitBid{} }
func (m *MsgSubmitBid) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitBid) ProtoMessage()    {}
func (*MsgSubmitBid) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb5a3920549f3869, []int{2}
}
func (m *MsgSubmitBid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitBid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitBid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitBid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitBid.Merge(m, src)
}
func (m *MsgSubmitBid) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitBid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitBid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitBid proto.InternalMessageInfo

func (m *MsgSubmitBid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubmitBid) GetBidID() string {
	if m != nil {
		return m.BidID
	}
	return ""
}

func (m *MsgSubmitBid) GetAuctionID() string {
	if m != nil {
		return m.AuctionID
	}
	return ""
}

func (m *MsgSubmitBid) GetBidHash() string {
	if m != nil {
		return m.BidHash
	}
	return ""
}

func (m *MsgSubmitBid) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type MsgSubmitBidResponse struct {
}

func (m *MsgSubmitBidResponse) Reset()         { *m = MsgSubmitBidResponse{} }
func (m *MsgSubmitBidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitBidResponse) ProtoMessage()    {}
func (*MsgSubmitBidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb5a3920549f3869, []int{3}
}
func (m *MsgSubmitBidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitBidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitBidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitBidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitBidResponse.Merge(m, src)
}
func (m *MsgSubmitBidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitBidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitBidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitBidResponse proto.InternalMessageInfo

type MsgUpdateBid struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	BidID     string `protobuf:"bytes,2,opt,name=bidID,proto3" json:"bidID,omitempty"`
	AuctionID string `protobuf:"bytes,3,opt,name=auctionID,proto3" json:"auctionID,omitempty"`
	BidHash   string `protobuf:"bytes,4,opt,name=bidHash,proto3" json:"bidHash,omitempty"`
	CreatedAt int64  `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (m *MsgUpdateBid) Reset()         { *m = MsgUpdateBid{} }
func (m *MsgUpdateBid) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateBid) ProtoMessage()    {}
func (*MsgUpdateBid) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb5a3920549f3869, []int{4}
}
func (m *MsgUpdateBid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateBid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateBid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateBid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateBid.Merge(m, src)
}
func (m *MsgUpdateBid) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateBid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateBid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateBid proto.InternalMessageInfo

func (m *MsgUpdateBid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateBid) GetBidID() string {
	if m != nil {
		return m.BidID
	}
	return ""
}

func (m *MsgUpdateBid) GetAuctionID() string {
	if m != nil {
		return m.AuctionID
	}
	return ""
}

func (m *MsgUpdateBid) GetBidHash() string {
	if m != nil {
		return m.BidHash
	}
	return ""
}

func (m *MsgUpdateBid) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type MsgUpdateBidResponse struct {
}

func (m *MsgUpdateBidResponse) Reset()         { *m = MsgUpdateBidResponse{} }
func (m *MsgUpdateBidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateBidResponse) ProtoMessage()    {}
func (*MsgUpdateBidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb5a3920549f3869, []int{5}
}
func (m *MsgUpdateBidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateBidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateBidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateBidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateBidResponse.Merge(m, src)
}
func (m *MsgUpdateBidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateBidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateBidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateBidResponse proto.InternalMessageInfo

type MsgCancelBid struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	BidID   string `protobuf:"bytes,2,opt,name=bidID,proto3" json:"bidID,omitempty"`
}

func (m *MsgCancelBid) Reset()         { *m = MsgCancelBid{} }
func (m *MsgCancelBid) String() string { return proto.CompactTextString(m) }
func (*MsgCancelBid) ProtoMessage()    {}
func (*MsgCancelBid) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb5a3920549f3869, []int{6}
}
func (m *MsgCancelBid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelBid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelBid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelBid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelBid.Merge(m, src)
}
func (m *MsgCancelBid) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelBid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelBid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelBid proto.InternalMessageInfo

func (m *MsgCancelBid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCancelBid) GetBidID() string {
	if m != nil {
		return m.BidID
	}
	return ""
}

type MsgCancelBidResponse struct {
}

func (m *MsgCancelBidResponse) Reset()         { *m = MsgCancelBidResponse{} }
func (m *MsgCancelBidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCancelBidResponse) ProtoMessage()    {}
func (*MsgCancelBidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb5a3920549f3869, []int{7}
}
func (m *MsgCancelBidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelBidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelBidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelBidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelBidResponse.Merge(m, src)
}
func (m *MsgCancelBidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelBidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelBidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelBidResponse proto.InternalMessageInfo

type MsgFinalizeBid struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	BidValue string `protobuf:"bytes,4,opt,name=bidValue,proto3" json:"bidValue,omitempty"`
}

func (m *MsgFinalizeBid) Reset()         { *m = MsgFinalizeBid{} }
func (m *MsgFinalizeBid) String() string { return proto.CompactTextString(m) }
func (*MsgFinalizeBid) ProtoMessage()    {}
func (*MsgFinalizeBid) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb5a3920549f3869, []int{8}
}
func (m *MsgFinalizeBid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinalizeBid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinalizeBid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinalizeBid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinalizeBid.Merge(m, src)
}
func (m *MsgFinalizeBid) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinalizeBid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinalizeBid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinalizeBid proto.InternalMessageInfo

func (m *MsgFinalizeBid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgFinalizeBid) GetBidValue() string {
	if m != nil {
		return m.BidValue
	}
	return ""
}

type MsgFinalizeBidResponse struct {
}

func (m *MsgFinalizeBidResponse) Reset()         { *m = MsgFinalizeBidResponse{} }
func (m *MsgFinalizeBidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFinalizeBidResponse) ProtoMessage()    {}
func (*MsgFinalizeBidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb5a3920549f3869, []int{9}
}
func (m *MsgFinalizeBidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinalizeBidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinalizeBidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinalizeBidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinalizeBidResponse.Merge(m, src)
}
func (m *MsgFinalizeBidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinalizeBidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinalizeBidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinalizeBidResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgInitiateAuction)(nil), "uwezukwechibuzor.cardex.auction.MsgInitiateAuction")
	proto.RegisterType((*MsgInitiateAuctionResponse)(nil), "uwezukwechibuzor.cardex.auction.MsgInitiateAuctionResponse")
	proto.RegisterType((*MsgSubmitBid)(nil), "uwezukwechibuzor.cardex.auction.MsgSubmitBid")
	proto.RegisterType((*MsgSubmitBidResponse)(nil), "uwezukwechibuzor.cardex.auction.MsgSubmitBidResponse")
	proto.RegisterType((*MsgUpdateBid)(nil), "uwezukwechibuzor.cardex.auction.MsgUpdateBid")
	proto.RegisterType((*MsgUpdateBidResponse)(nil), "uwezukwechibuzor.cardex.auction.MsgUpdateBidResponse")
	proto.RegisterType((*MsgCancelBid)(nil), "uwezukwechibuzor.cardex.auction.MsgCancelBid")
	proto.RegisterType((*MsgCancelBidResponse)(nil), "uwezukwechibuzor.cardex.auction.MsgCancelBidResponse")
	proto.RegisterType((*MsgFinalizeBid)(nil), "uwezukwechibuzor.cardex.auction.MsgFinalizeBid")
	proto.RegisterType((*MsgFinalizeBidResponse)(nil), "uwezukwechibuzor.cardex.auction.MsgFinalizeBidResponse")
}

func init() { proto.RegisterFile("cardex/auction/tx.proto", fileDescriptor_fb5a3920549f3869) }

var fileDescriptor_fb5a3920549f3869 = []byte{
	// 535 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0xcd, 0x6a, 0x13, 0x51,
	0x14, 0xce, 0x34, 0x4d, 0xd2, 0x1c, 0xb5, 0x95, 0x4b, 0x89, 0x97, 0x50, 0xc6, 0x12, 0x44, 0xb2,
	0x71, 0x06, 0x5a, 0xc4, 0x85, 0x20, 0xb4, 0x86, 0x62, 0xc1, 0x80, 0x44, 0xea, 0xc2, 0xdd, 0x9d,
	0x3b, 0x97, 0xe4, 0x62, 0x32, 0x13, 0xef, 0x0f, 0x89, 0xd9, 0xfa, 0x02, 0x2e, 0x7c, 0x0c, 0x1f,
	0xc4, 0x65, 0x97, 0x6e, 0x04, 0x49, 0x5e, 0x44, 0xe6, 0x66, 0xfe, 0x32, 0x41, 0x3a, 0xed, 0xca,
	0x55, 0x72, 0xce, 0xf9, 0xce, 0xf9, 0xbe, 0x73, 0xf8, 0x66, 0x06, 0x1e, 0x51, 0x22, 0x7c, 0x36,
	0x77, 0x89, 0xa6, 0x8a, 0x87, 0x81, 0xab, 0xe6, 0xce, 0x54, 0x84, 0x2a, 0x44, 0x8f, 0xf5, 0x8c,
	0x2d, 0xf4, 0xa7, 0x19, 0xa3, 0x23, 0xee, 0xe9, 0x45, 0x28, 0x9c, 0x35, 0xd2, 0x89, 0x91, 0x9d,
	0x1f, 0x3b, 0x80, 0xfa, 0x72, 0x78, 0x19, 0x70, 0xc5, 0x89, 0x62, 0x67, 0xeb, 0x34, 0xc2, 0xd0,
	0xa0, 0x82, 0x11, 0x15, 0x0a, 0x6c, 0x1d, 0x5b, 0xdd, 0xe6, 0x20, 0x09, 0xd1, 0x11, 0x34, 0xe3,
	0xde, 0xcb, 0x1e, 0xde, 0x31, 0xb5, 0x2c, 0x81, 0x6c, 0x80, 0x09, 0x0f, 0xf8, 0x44, 0x4f, 0xce,
	0xb9, 0x8f, 0xab, 0xa6, 0x9c, 0xcb, 0xa0, 0x87, 0x50, 0xf5, 0xb8, 0x8f, 0x77, 0x4d, 0x21, 0xfa,
	0x8b, 0xba, 0x70, 0x10, 0xb7, 0xf7, 0xb4, 0x20, 0xd1, 0x2f, 0xae, 0x99, 0x6a, 0x31, 0x8d, 0x9e,
	0xc2, 0x3e, 0x25, 0xa2, 0xc7, 0x24, 0x15, 0x7c, 0x6a, 0x80, 0x75, 0x03, 0x2c, 0x64, 0xd1, 0x13,
	0x78, 0x40, 0x89, 0x78, 0xc7, 0xa9, 0xd2, 0x82, 0x5d, 0x89, 0x31, 0x6e, 0x18, 0xd8, 0x66, 0x12,
	0xb5, 0xa0, 0x2e, 0x15, 0x51, 0x5a, 0xe2, 0x3d, 0x53, 0x8e, 0xa3, 0x68, 0x3f, 0xb3, 0x2a, 0xf3,
	0xcf, 0x14, 0x6e, 0x1e, 0x5b, 0xdd, 0xea, 0x20, 0x4b, 0x74, 0x8e, 0xa0, 0xbd, 0x7d, 0xad, 0x01,
	0x93, 0xd3, 0x30, 0x90, 0xac, 0xf3, 0xdd, 0x82, 0xfb, 0x7d, 0x39, 0x7c, 0xaf, 0xbd, 0x09, 0x57,
	0xd1, 0xba, 0xff, 0x3e, 0xe3, 0x21, 0xd4, 0x3c, 0xee, 0xa7, 0x27, 0x5c, 0x07, 0x9b, 0xc7, 0xad,
	0x16, 0x8f, 0x8b, 0xa1, 0xe1, 0x71, 0xff, 0x0d, 0x91, 0xa3, 0xf8, 0x80, 0x49, 0xb8, 0x29, 0xba,
	0x56, 0x14, 0xdd, 0x82, 0xc3, 0xbc, 0xaa, 0xa2, 0xdc, 0xab, 0xa9, 0x4f, 0x14, 0xfb, 0xdf, 0xe4,
	0xa6, 0xaa, 0x52, 0xb9, 0xaf, 0x8c, 0xda, 0xd7, 0x24, 0xa0, 0x6c, 0x7c, 0x07, 0xb5, 0xf1, 0xdc,
	0xb4, 0x3f, 0x9d, 0x7b, 0x01, 0xfb, 0x7d, 0x39, 0xbc, 0xe0, 0x01, 0x19, 0xf3, 0xc5, 0x0d, 0x77,
	0x68, 0xc3, 0x9e, 0xc7, 0xfd, 0x0f, 0x64, 0xac, 0x59, 0xbc, 0x54, 0x1a, 0x77, 0x30, 0xb4, 0x36,
	0xe7, 0x24, 0x0c, 0x27, 0xbf, 0x77, 0xa1, 0xda, 0x97, 0x43, 0xf4, 0xd5, 0x82, 0x83, 0xe2, 0x93,
	0x76, 0xea, 0xdc, 0xf0, 0x88, 0x3a, 0xdb, 0x86, 0x6b, 0xbf, 0xbc, 0x43, 0x53, 0xa2, 0x06, 0x7d,
	0x86, 0x66, 0xe6, 0xd0, 0x67, 0x65, 0x26, 0xa5, 0xf0, 0xf6, 0xf3, 0x5b, 0xc1, 0xf3, 0x94, 0x99,
	0xcb, 0x4a, 0x51, 0xa6, 0xf0, 0x72, 0x94, 0x5b, 0x6e, 0x89, 0x28, 0x33, 0xab, 0x94, 0xa2, 0x4c,
	0xe1, 0xe5, 0x28, 0xb7, 0x8c, 0x84, 0x66, 0x70, 0x2f, 0xef, 0x22, 0xb7, 0xcc, 0x94, 0x5c, 0x43,
	0xfb, 0xc5, 0x2d, 0x1b, 0x12, 0xe2, 0xf3, 0xb7, 0x3f, 0x97, 0xb6, 0x75, 0xbd, 0xb4, 0xad, 0x3f,
	0x4b, 0xdb, 0xfa, 0xb6, 0xb2, 0x2b, 0xd7, 0x2b, 0xbb, 0xf2, 0x6b, 0x65, 0x57, 0x3e, 0x9e, 0x0c,
	0xb9, 0x1a, 0x69, 0xcf, 0xa1, 0xe1, 0xc4, 0x2d, 0x0e, 0x77, 0xcd, 0x7b, 0x73, 0xee, 0xe6, 0x3e,
	0x1b, 0x5f, 0xa6, 0x4c, 0x7a, 0x75, 0xf3, 0xe9, 0x38, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xaf,
	0x94, 0xb0, 0xfa, 0x55, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	InitiateAuction(ctx context.Context, in *MsgInitiateAuction, opts ...grpc.CallOption) (*MsgInitiateAuctionResponse, error)
	SubmitBid(ctx context.Context, in *MsgSubmitBid, opts ...grpc.CallOption) (*MsgSubmitBidResponse, error)
	UpdateBid(ctx context.Context, in *MsgUpdateBid, opts ...grpc.CallOption) (*MsgUpdateBidResponse, error)
	CancelBid(ctx context.Context, in *MsgCancelBid, opts ...grpc.CallOption) (*MsgCancelBidResponse, error)
	FinalizeBid(ctx context.Context, in *MsgFinalizeBid, opts ...grpc.CallOption) (*MsgFinalizeBidResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) InitiateAuction(ctx context.Context, in *MsgInitiateAuction, opts ...grpc.CallOption) (*MsgInitiateAuctionResponse, error) {
	out := new(MsgInitiateAuctionResponse)
	err := c.cc.Invoke(ctx, "/uwezukwechibuzor.cardex.auction.Msg/InitiateAuction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubmitBid(ctx context.Context, in *MsgSubmitBid, opts ...grpc.CallOption) (*MsgSubmitBidResponse, error) {
	out := new(MsgSubmitBidResponse)
	err := c.cc.Invoke(ctx, "/uwezukwechibuzor.cardex.auction.Msg/SubmitBid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateBid(ctx context.Context, in *MsgUpdateBid, opts ...grpc.CallOption) (*MsgUpdateBidResponse, error) {
	out := new(MsgUpdateBidResponse)
	err := c.cc.Invoke(ctx, "/uwezukwechibuzor.cardex.auction.Msg/UpdateBid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CancelBid(ctx context.Context, in *MsgCancelBid, opts ...grpc.CallOption) (*MsgCancelBidResponse, error) {
	out := new(MsgCancelBidResponse)
	err := c.cc.Invoke(ctx, "/uwezukwechibuzor.cardex.auction.Msg/CancelBid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) FinalizeBid(ctx context.Context, in *MsgFinalizeBid, opts ...grpc.CallOption) (*MsgFinalizeBidResponse, error) {
	out := new(MsgFinalizeBidResponse)
	err := c.cc.Invoke(ctx, "/uwezukwechibuzor.cardex.auction.Msg/FinalizeBid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	InitiateAuction(context.Context, *MsgInitiateAuction) (*MsgInitiateAuctionResponse, error)
	SubmitBid(context.Context, *MsgSubmitBid) (*MsgSubmitBidResponse, error)
	UpdateBid(context.Context, *MsgUpdateBid) (*MsgUpdateBidResponse, error)
	CancelBid(context.Context, *MsgCancelBid) (*MsgCancelBidResponse, error)
	FinalizeBid(context.Context, *MsgFinalizeBid) (*MsgFinalizeBidResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) InitiateAuction(ctx context.Context, req *MsgInitiateAuction) (*MsgInitiateAuctionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitiateAuction not implemented")
}
func (*UnimplementedMsgServer) SubmitBid(ctx context.Context, req *MsgSubmitBid) (*MsgSubmitBidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitBid not implemented")
}
func (*UnimplementedMsgServer) UpdateBid(ctx context.Context, req *MsgUpdateBid) (*MsgUpdateBidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBid not implemented")
}
func (*UnimplementedMsgServer) CancelBid(ctx context.Context, req *MsgCancelBid) (*MsgCancelBidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelBid not implemented")
}
func (*UnimplementedMsgServer) FinalizeBid(ctx context.Context, req *MsgFinalizeBid) (*MsgFinalizeBidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinalizeBid not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_InitiateAuction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInitiateAuction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InitiateAuction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uwezukwechibuzor.cardex.auction.Msg/InitiateAuction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InitiateAuction(ctx, req.(*MsgInitiateAuction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubmitBid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubmitBid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubmitBid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uwezukwechibuzor.cardex.auction.Msg/SubmitBid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubmitBid(ctx, req.(*MsgSubmitBid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateBid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateBid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateBid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uwezukwechibuzor.cardex.auction.Msg/UpdateBid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateBid(ctx, req.(*MsgUpdateBid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CancelBid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCancelBid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CancelBid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uwezukwechibuzor.cardex.auction.Msg/CancelBid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CancelBid(ctx, req.(*MsgCancelBid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_FinalizeBid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFinalizeBid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FinalizeBid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uwezukwechibuzor.cardex.auction.Msg/FinalizeBid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FinalizeBid(ctx, req.(*MsgFinalizeBid))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "uwezukwechibuzor.cardex.auction.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InitiateAuction",
			Handler:    _Msg_InitiateAuction_Handler,
		},
		{
			MethodName: "SubmitBid",
			Handler:    _Msg_SubmitBid_Handler,
		},
		{
			MethodName: "UpdateBid",
			Handler:    _Msg_UpdateBid_Handler,
		},
		{
			MethodName: "CancelBid",
			Handler:    _Msg_CancelBid_Handler,
		},
		{
			MethodName: "FinalizeBid",
			Handler:    _Msg_FinalizeBid_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cardex/auction/tx.proto",
}

func (m *MsgInitiateAuction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitiateAuction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitiateAuction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CreatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.CarPictureUrl) > 0 {
		i -= len(m.CarPictureUrl)
		copy(dAtA[i:], m.CarPictureUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CarPictureUrl)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.CarDescription) > 0 {
		i -= len(m.CarDescription)
		copy(dAtA[i:], m.CarDescription)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CarDescription)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.AuctionDuration) > 0 {
		i -= len(m.AuctionDuration)
		copy(dAtA[i:], m.AuctionDuration)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuctionDuration)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Bid) > 0 {
		i -= len(m.Bid)
		copy(dAtA[i:], m.Bid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Bid)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.MinimumBid) > 0 {
		i -= len(m.MinimumBid)
		copy(dAtA[i:], m.MinimumBid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MinimumBid)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AuctionID) > 0 {
		i -= len(m.AuctionID)
		copy(dAtA[i:], m.AuctionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuctionID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInitiateAuctionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitiateAuctionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitiateAuctionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubmitBid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitBid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitBid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CreatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x28
	}
	if len(m.BidHash) > 0 {
		i -= len(m.BidHash)
		copy(dAtA[i:], m.BidHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BidHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AuctionID) > 0 {
		i -= len(m.AuctionID)
		copy(dAtA[i:], m.AuctionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuctionID)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.BidID) > 0 {
		i -= len(m.BidID)
		copy(dAtA[i:], m.BidID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BidID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitBidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitBidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitBidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateBid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateBid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateBid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CreatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x28
	}
	if len(m.BidHash) > 0 {
		i -= len(m.BidHash)
		copy(dAtA[i:], m.BidHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BidHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AuctionID) > 0 {
		i -= len(m.AuctionID)
		copy(dAtA[i:], m.AuctionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuctionID)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.BidID) > 0 {
		i -= len(m.BidID)
		copy(dAtA[i:], m.BidID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BidID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateBidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateBidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateBidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCancelBid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelBid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelBid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.BidID) > 0 {
		i -= len(m.BidID)
		copy(dAtA[i:], m.BidID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BidID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCancelBidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelBidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelBidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFinalizeBid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinalizeBid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinalizeBid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.BidValue) > 0 {
		i -= len(m.BidValue)
		copy(dAtA[i:], m.BidValue)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BidValue)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFinalizeBidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinalizeBidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinalizeBidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgInitiateAuction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AuctionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MinimumBid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Bid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AuctionDuration)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CarDescription)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CarPictureUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovTx(uint64(m.CreatedAt))
	}
	return n
}

func (m *MsgInitiateAuctionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubmitBid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BidID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AuctionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BidHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovTx(uint64(m.CreatedAt))
	}
	return n
}

func (m *MsgSubmitBidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateBid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BidID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AuctionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BidHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovTx(uint64(m.CreatedAt))
	}
	return n
}

func (m *MsgUpdateBidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCancelBid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BidID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCancelBidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFinalizeBid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BidValue)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgFinalizeBidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgInitiateAuction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitiateAuction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitiateAuction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuctionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuctionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinimumBid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MinimumBid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuctionDuration", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuctionDuration = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CarDescription", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CarDescription = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CarPictureUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CarPictureUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitiateAuctionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitiateAuctionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitiateAuctionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitBid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitBid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitBid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BidID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuctionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuctionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BidHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitBidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitBidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitBidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateBid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateBid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateBid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BidID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuctionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuctionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BidHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateBidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateBidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateBidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelBid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelBid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelBid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BidID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelBidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelBidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelBidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinalizeBid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinalizeBid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinalizeBid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BidValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinalizeBidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinalizeBidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinalizeBidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
